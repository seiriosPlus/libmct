                             REQUIREMENTS

MCT requires either standard library implementation with TR1
extensions or Boost Functional library to provide default hash
function.  For building you need either:

- SCons with Python 2.5 or later;
- GNU Make on a UNIX-like system.

Also see a section below that describes installation with neither
SCons nor Make.

Even though compilation is not required to install MCT, you will need
a C++ compiler to use it.  MCT has been tested on the following compilers:

- GCC 4.x;
- Clang 2.7 or later.

C++0x features are supported on GCC 4.4 and later and Clang 3.1 or
later.

Additionally, an older version of MCT was reported to work on Visual
C++ 2005.



                       INSTALLATION WITH SCONS

To install MCT just enter (maybe as superuser or with sudo prefix):

    scons install

There is nothing to build as MCT is a header-only library and
configuration header is generated on the fly.  To install in a
different place specify 'prefix' variable, e.g.:

    scons install prefix=~/.local



                        INSTALLATION WITH MAKE

Alternatively, if you don't have SCons, but have GNU Make, enter:

    make install

As with SCons, you can install into a different place too:

    scons install prefix=~/.local

Note that Make support is fairly new and not well-tested yet.



                       INSTALLING WITHOUT TOOLS

MCT is simple enough to be installed even without SCons or Make.  If
you don't have the tools and can't install them, you can proceed as
follows:

1. Copy file 'mct/config.hpp.in' to 'mct/config.hpp'.  In this new
   copy, replace all '@{...}' placeholders with values correct for
   your platform.  Current MCT version can be found in file 'version'
   in this directory.  If you are unsure which values to specify for
   MCT_HASH_* and MCT_TYPE_TRAITS_* symbols, refer to documentation
   section 'Inclusion-Time Configuration'.

2. Copy directory 'mct' (the one with 'hash-set.hpp' and other files
   in it) to where your compiler looks for included files.  This would
   be '/usr/local/include' or '/usr/include' on UNIX-like systems, for
   instance.



                     TESTING AND BENCHMARKING MCT

Please refer to file README for details.
